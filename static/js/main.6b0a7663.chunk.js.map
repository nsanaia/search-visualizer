{"version":3,"sources":["hooks/useWindowSize.js","utils.js","algorithm/nodeStatus.js","algorithm/gridHelper.js","algorithm/direction.js","algorithm/algorithmType.js","algorithm/algorithm.js","algorithm/phase.js","algorithm/possibleValues.js","contexts/SearchVisualizerContext.js","hooks/usePrevious.js","components/grid/cellHelper.js","components/grid/Cell.js","components/grid/Grid.js","hooks/useClickOutside.js","components/comboBox/ComboBox.js","components/button/Button.js","components/button/ButtonToggle.js","components/header/Header.js","components/SearchVisualizer.js","App.js","index.js"],"names":["RESIZE_EVENT_KEY","sleep","ms","Promise","resolve","setTimeout","generateRandomNumbers","nums","map","n","Math","floor","random","getEventTargetData","e","target","dataset","NONE","WALL","START","END","VISITING","TO_VISIT","VISITED","PATH","getInitialGrid","rowNum","colNum","grid","r","c","row","col","status","first","second","generateTwoDistinctNodesInGrid","randStart","randEnd","start","end","LEFT","DOWN","DFS","GREEDY","A_STAR","search","algoType","getSleepTime","isStop","stop","isPaused","pause","savedNodes","a","searchInternal","res","isPath","path","entries","i","node","setSearchStatus","getDirection","searchWithoutSleep","nodes","makeNodeWithPath","length","getNextNode","curr","currPath","searchStatus","getValidNeighbours","push","searchInternalWithoutSleep","putNextNodeBack","alreadyPath","pop","sort","b","getHeuristicValue","shift","unshift","getManhattanDistance","abs","ans","dr","dc","inBounds","includes","index","min","max","IDLE","SEARCHING","PAUSED","SEARCHED","speedPossibleValues","key","label","algorithmPossibleValues","SearchVisualizerContext","createContext","useSearchVisualizer","useContext","SearchVisualizerProvider","children","useState","phase","setPhase","prevPhase","value","ref","useRef","useEffect","current","usePrevious","isApplicationInPhase","targetP","phaseRef","pauseData","setStart","setEnd","useReducer","isErasingWalls","toggleErasingWalls","draggingNode","find","algorithm","setAlgorithm","speed","getSpeed","setSpeed","val","clear","data","onlyPath","setStatus","onPhaseChange","initialGrid","initialStart","initialEnd","Provider","stopSearch","pauseSearch","resumeSearch","getNode","searchImmediately","_start","_end","getDraggingNode","setDraggingNode","getCellClassname","hasTransition","additionalClass","getCellIcon","dir","icon","faRunning","className","faFlagCheckered","getArrowByDir","style","zIndex","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","Cell","setDir","setHasTransition","s","trans","canDrag","allowDrop","preventDefault","onDragOver","draggable","onDragStart","onDragEnd","dragNode","onDrop","onDragEnter","Grid","wallingMode","setWallingMode","changeNodeWallStatus","onMouseDown","canchangestatus","onMouseMove","onMouseUp","isStartDrag","rowId","colId","_status","MOUSE_DOWN_EVENT_KEY","ComboBox","func","possibleValues","onValueChange","enabled","opened","setOpened","selected","setSelected","thisRef","onClick","contains","document","addEventListener","removeEventListener","posVal","v","Button","ButtonToggle","checked","setChecked","Header","width","faSearch","faStop","faPlay","faPause","faEraser","faTrashAlt","faTrash","SearchVisualizer","height","setHeight","setWidth","onResize","window","innerWidth","innerHeight","useWindowSize","console","log","emInPixels","parseFloat","getComputedStyle","body","fontSize","cellSize","headerSize","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6b0a7663.chunk.js","sourcesContent":["import {useEffect, useState} from \"react\";\r\n\r\nconst RESIZE_EVENT_KEY = \"resize\";\r\n\r\nexport function useWindowSize() {\r\n    const [height, setHeight] = useState(0);\r\n    const [width, setWidth] = useState(0);\r\n\r\n    useEffect(() => {\r\n        function onResize() {\r\n            setWidth(window.innerWidth);\r\n            setHeight(window.innerHeight);\r\n        }\r\n\r\n        window.addEventListener(RESIZE_EVENT_KEY, onResize);\r\n        onResize();\r\n\r\n        return () => window.removeEventListener(RESIZE_EVENT_KEY, onResize);\r\n    }, []);\r\n\r\n    return [width, height];\r\n}\r\n","export function sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport function generateRandomNumbers(...nums) {\r\n    return nums.map(n => Math.floor(Math.random() * (n)));\r\n}\r\n\r\nexport function getEventTargetData(e) {\r\n    return e.target.dataset || {};\r\n}\r\n","export const NONE = 'none';\r\nexport const WALL = 'wall';\r\n\r\nexport const START = 'start';\r\nexport const END = 'end';\r\n\r\n//searching statuses\r\nexport const VISITING = 'visiting';\r\nexport const TO_VISIT = 'toVisit';\r\nexport const VISITED = 'visited';\r\nexport const PATH = 'path';\r\n","import {generateRandomNumbers} from \"../utils\";\r\nimport {START, END, NONE} from \"./nodeStatus\";\r\n\r\nexport function getInitialGrid(rowNum, colNum) {\r\n    const grid = [];\r\n    for (let r = 0; r < rowNum; r++) {\r\n        grid[r] = [];\r\n        for (let c = 0; c < colNum; c++) {\r\n            grid[r][c] = {\r\n                row: r,\r\n                col: c,\r\n                status: NONE\r\n            };\r\n        }\r\n    }\r\n\r\n    const [randStart, randEnd] = generateTwoDistinctNodesInGrid(rowNum, colNum);\r\n    let start = null;\r\n    let end = null;\r\n\r\n    if (randStart && randEnd) {\r\n        start = grid[randStart[0]][randStart[1]];\r\n        start.status = START;\r\n        end = grid[randEnd[0]][randEnd[1]];\r\n        end.status = END;\r\n    }\r\n\r\n    return [grid, start, end];\r\n}\r\n\r\nfunction generateTwoDistinctNodesInGrid(rowNum, colNum) {\r\n    if (!rowNum || !colNum) {\r\n        return [];\r\n    }\r\n    const first = generateRandomNumbers(rowNum, colNum);\r\n    let second = first;\r\n    while (first[0] === second[0] && first[1] === second[1]) {\r\n        second = generateRandomNumbers(rowNum, colNum);\r\n    }\r\n    return [first, second];\r\n}\r\n\r\n","export const LEFT = \"left\";\r\nexport const UP = \"up\";\r\nexport const RIGHT = \"right\";\r\nexport const DOWN = \"down\";","export const DIJKSTRA = 'dijkstra';\r\nexport const BFS = 'bfs';\r\nexport const DFS = 'dfs';\r\nexport const GREEDY = 'greedy';\r\nexport const A_STAR = 'A*';\r\n","import {sleep} from \"../utils\";\r\nimport {END, NONE, PATH, START, TO_VISIT, VISITED, VISITING} from \"./nodeStatus\";\r\nimport {DOWN, LEFT, RIGHT, UP} from \"./direction\";\r\nimport {A_STAR, DFS, GREEDY} from \"./algorithmType\";\r\n\r\n\r\nexport async function search(algoType,\r\n                             grid,\r\n                             start,\r\n                             end,\r\n                             getSleepTime,\r\n                             isStop,\r\n                             stop,\r\n                             isPaused,\r\n                             pause,\r\n                             savedNodes) {\r\n    const res = await searchInternal(algoType, grid, start, end, getSleepTime, isStop, stop, isPaused, pause, savedNodes);\r\n    if (!res)\r\n        return false;\r\n    if (res.isPath) {\r\n        for (const [i, node] of res.path.entries()) {\r\n            node.setSearchStatus(PATH, getDirection(node, res.path[i + 1]));\r\n            await sleep(getSleepTime());\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n\r\nexport function searchWithoutSleep(algoType, grid, start, end) {\r\n    const res = searchInternalWithoutSleep(algoType, grid, start, end);\r\n    if (!res)\r\n        return false;\r\n    if (res.isPath) {\r\n        for (const [i, node] of res.path.entries())\r\n            node.setSearchStatus(PATH, getDirection(node, res.path[i + 1]), false);\r\n    }\r\n    return true;\r\n}\r\n\r\nasync function searchInternal(algoType,\r\n                              grid,\r\n                              start,\r\n                              end,\r\n                              getSleepTime,\r\n                              isStop,\r\n                              stop,\r\n                              isPaused,\r\n                              pause,\r\n                              savedNodes) {\r\n    let nodes = savedNodes || [makeNodeWithPath(start, [])];\r\n\r\n    while (nodes.length) {\r\n        if (isStop()) {\r\n            stop();\r\n            return;\r\n        }\r\n\r\n        const {node: curr, path: currPath} = getNextNode(algoType, nodes, end);\r\n        if (curr.status === END)\r\n            return {isPath: true, path: currPath};\r\n        if (curr.searchStatus === VISITED)\r\n            continue;\r\n        curr.setSearchStatus(VISITING);\r\n        await sleep(getSleepTime());\r\n\r\n        if (isPaused()) {\r\n            putNextNodeBack(algoType, nodes, {node: curr, path: currPath});\r\n            pause(nodes);\r\n            return;\r\n        }\r\n\r\n        for (let n of getValidNeighbours(grid, curr)) {\r\n            nodes.push(makeNodeWithPath(n, currPath));\r\n            if (algoType !== DFS) {\r\n                n.setSearchStatus(TO_VISIT);\r\n                await sleep(getSleepTime());\r\n            }\r\n        }\r\n\r\n        curr.setSearchStatus(VISITED);\r\n        await sleep(getSleepTime());\r\n    }\r\n\r\n    return {isPath: false};\r\n}\r\n\r\n\r\nfunction searchInternalWithoutSleep(algoType,\r\n                                    grid,\r\n                                    start,\r\n                                    end) {\r\n\r\n    let nodes = [makeNodeWithPath(start, [])];\r\n\r\n    while (nodes.length) {\r\n        const {node: curr, path: currPath} = getNextNode(algoType, nodes, end);\r\n        if (curr.row === end.row && curr.col === end.col)\r\n            return {isPath: true, path: currPath};\r\n        if (curr.searchStatus === VISITED)\r\n            continue;\r\n\r\n        for (let n of getValidNeighbours(grid, curr))\r\n            nodes.push(makeNodeWithPath(n, currPath));\r\n\r\n        curr.setSearchStatus(VISITED, null, false);\r\n    }\r\n\r\n    return {isPath: false};\r\n}\r\n\r\nfunction makeNodeWithPath(node, alreadyPath) {\r\n    return {node, path: [...alreadyPath, node]};\r\n}\r\n\r\nfunction getNextNode(algoType, nodes, end) {\r\n    if (algoType === DFS)\r\n        return nodes.pop();\r\n\r\n    if (algoType === A_STAR || algoType === GREEDY)\r\n        nodes.sort((a, b) => getHeuristicValue(algoType, a, end) - getHeuristicValue(algoType, b, end));\r\n\r\n    return nodes.shift();\r\n}\r\n\r\nfunction putNextNodeBack(algoType, nodes, node) {\r\n    if (algoType === DFS)\r\n        nodes.push(node)\r\n    else\r\n        nodes.unshift(node);\r\n}\r\n\r\nfunction getManhattanDistance(a, b) {\r\n    return Math.abs(a.row - a.row) + Math.abs(a.col - b.col);\r\n}\r\n\r\nfunction getHeuristicValue(algoType, {node, path}, end) {\r\n    if (algoType === GREEDY)\r\n        return getManhattanDistance(node, end);\r\n    if (algoType === A_STAR)\r\n        return path.length + getManhattanDistance(node, end);\r\n}\r\n\r\nfunction getValidNeighbours(grid, node) {\r\n    const neighbours = [[1, 0], [0, 1], [-1, 0], [0, -1]];\r\n    let ans = [];\r\n\r\n    for (let [dr, dc] of neighbours) {\r\n        let row = node.row + dr;\r\n        let col = node.col + dc;\r\n\r\n        if (inBounds(row, 0, grid.length)\r\n            && inBounds(col, 0, grid[0].length)\r\n            && [NONE, END, START].includes(grid[row][col].status)\r\n            && !grid[row][col].searchStatus) {\r\n\r\n            ans.push(grid[row][col]);\r\n        }\r\n    }\r\n\r\n    return ans;\r\n}\r\n\r\nfunction inBounds(index, min, max) {\r\n    return index >= min && index < max;\r\n}\r\n\r\nfunction getDirection(a, b) {\r\n    if (!b)\r\n        return null;\r\n    if (b.row > a.row)\r\n        return DOWN;\r\n    if (b.row < a.row)\r\n        return UP;\r\n    if (b.col > a.col)\r\n        return RIGHT;\r\n    if (b.col < a.col)\r\n        return LEFT;\r\n}\r\n","export const IDLE = \"idle\";\r\nexport const SEARCHING = \"searching\";\r\nexport const PAUSED = \"paused\";\r\nexport const SEARCHED = \"searched\";","import {DIJKSTRA, BFS, DFS, GREEDY, A_STAR} from \"./algorithmType\";\r\n\r\nexport const speedPossibleValues = [\r\n    {key: 0.25, label: '0.25X'},\r\n    {key: 0.5, label: '0.5X'},\r\n    {key: 0.75, label: '0.75X'},\r\n    {key: 1, label: 'Normal'},\r\n    {key: 1.25, label: '1.25X'},\r\n    {key: 1.5, label: '1.5X'},\r\n    {key: 1.75, label: '1.75X'},\r\n    {key: 2, label: '2X'},\r\n];\r\n\r\nexport const algorithmPossibleValues = [\r\n    {key: DIJKSTRA, label: 'Dijkstra'},\r\n    {key: BFS, label: 'BFS'},\r\n    {key: DFS, label: 'DFS'},\r\n    {key: GREEDY, label: 'Greedy'},\r\n    {key: A_STAR, label: 'A*'},\r\n];","import React, {\r\n    createContext,\r\n    useContext,\r\n    useEffect,\r\n    useReducer,\r\n    useRef,\r\n    useState\r\n} from \"react\";\r\nimport {usePrevious} from \"../hooks/usePrevious\";\r\nimport {getInitialGrid} from \"../algorithm/gridHelper\";\r\nimport {search, searchWithoutSleep} from \"../algorithm/algorithm\";\r\nimport {BFS} from \"../algorithm/algorithmType\";\r\nimport {NONE, WALL} from \"../algorithm/nodeStatus\";\r\nimport {IDLE, PAUSED, SEARCHED, SEARCHING} from \"../algorithm/phase\";\r\nimport {algorithmPossibleValues, speedPossibleValues} from \"../algorithm/possibleValues\";\r\n\r\n\r\nconst SearchVisualizerContext = createContext();\r\nexport const useSearchVisualizer = () => useContext(SearchVisualizerContext);\r\n\r\nexport default function SearchVisualizerProvider({rowNum, colNum, children}) {\r\n    const [phase, setPhase] = useState(IDLE);\r\n    const prevPhase = usePrevious(phase);\r\n    const isApplicationInPhase = (...targetP) => targetP.includes(phase);\r\n    const phaseRef = useRef();//work around for checking changed phase from async search\r\n    const pauseData = useRef();\r\n\r\n    const grid = useRef([]);\r\n    const [start, setStart] = useState(null);\r\n    const [end, setEnd] = useState(null);\r\n    const [isErasingWalls, toggleErasingWalls] = useReducer(isErasingWalls => !isErasingWalls, false);\r\n    const draggingNode = useRef(null);\r\n    const getDraggingNode = () => draggingNode.current;\r\n    const setDraggingNode = n => draggingNode.current = n;\r\n\r\n    const [algorithm, setAlgorithm] = useState(algorithmPossibleValues.find(e => e.key === BFS));\r\n    const speed = useRef();\r\n    const getSpeed = () => speed.current;\r\n    const setSpeed = val => speed.current = val;\r\n\r\n    useEffect(() => {\r\n        onPhaseChange();\r\n    }, [phase]);\r\n\r\n    useEffect(() => {\r\n        const [initialGrid, initialStart, initialEnd] = getInitialGrid(rowNum, colNum);\r\n        grid.current = initialGrid;\r\n        setStart(initialStart);\r\n        setEnd(initialEnd);\r\n        setPhase(IDLE);\r\n        phaseRef.current = IDLE;\r\n        pauseData.current = null;\r\n        setSpeed(speedPossibleValues.find(e => e.key === 1));\r\n    }, [rowNum, colNum]);\r\n\r\n    async function onPhaseChange() {\r\n        phaseRef.current = phase;\r\n\r\n        if ([PAUSED, SEARCHED].includes(prevPhase) && isApplicationInPhase(IDLE))\r\n            clear(true);\r\n\r\n        if (isApplicationInPhase(SEARCHING)) {\r\n            if (prevPhase !== PAUSED) {\r\n                pauseData.current = null;\r\n                clear(true);\r\n            }\r\n\r\n            const res = await search(algorithm.key,\r\n                grid.current,\r\n                start,\r\n                end,\r\n                () => 10 / getSpeed().key,\r\n                () => phaseRef.current === IDLE,\r\n                () => clear(true),\r\n                () => phaseRef.current === PAUSED,\r\n                data => pauseData.current = data,\r\n                pauseData.current);\r\n\r\n            if (res)\r\n                setPhase(SEARCHED);\r\n        }\r\n    }\r\n\r\n    function searchImmediately(_start, _end) {\r\n        clear(true);\r\n        searchWithoutSleep(algorithm.key, grid.current, _start, _end);\r\n    }\r\n\r\n    function clear(onlyPath) {\r\n        for (const row of grid.current) {\r\n            for (const {status, setStatus, setSearchStatus} of row) {\r\n                setSearchStatus(null);\r\n                if (!onlyPath && status === WALL)\r\n                    setStatus(NONE);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <SearchVisualizerContext.Provider value={{\r\n            algorithm,\r\n            setAlgorithm,\r\n\r\n            phase,\r\n            isApplicationInPhase,\r\n            search: () => setPhase(SEARCHING),\r\n            stopSearch: () => setPhase(IDLE),\r\n            pauseSearch: () => setPhase(PAUSED),\r\n            resumeSearch: () => setPhase(SEARCHING),\r\n\r\n            isErasingWalls,\r\n            toggleErasingWalls,\r\n\r\n            grid: grid.current,\r\n            getNode: (row, col) => grid.current[row][col],\r\n            start,\r\n            setStart,\r\n            end,\r\n            setEnd,\r\n\r\n            searchImmediately,\r\n\r\n            clear,\r\n\r\n            getSpeed,\r\n            setSpeed,\r\n\r\n            getDraggingNode,\r\n            setDraggingNode\r\n        }}>\r\n            {children}\r\n        </SearchVisualizerContext.Provider>\r\n    );\r\n};","import {useRef, useEffect} from \"react\";\r\n\r\nexport function usePrevious(value) {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    }, [value]);\r\n\r\n    return ref.current;\r\n}","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faArrowDown,\r\n    faArrowLeft,\r\n    faArrowRight,\r\n    faArrowUp,\r\n    faFlagCheckered,\r\n    faRunning\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {END, PATH, START, TO_VISIT, VISITED, VISITING, WALL} from \"../../algorithm/nodeStatus\";\r\nimport {DOWN, LEFT, UP} from \"../../algorithm/direction\";\r\n\r\n\r\nexport const getCellClassname = (status, searchStatus, hasTransition) => {\r\n    let additionalClass = '';\r\n    if (status === WALL)\r\n        additionalClass = 'cell--wall';\r\n    if (searchStatus === VISITING)\r\n        additionalClass = 'cell--visiting';\r\n    if (searchStatus === TO_VISIT)\r\n        additionalClass = 'cell--to-visit';\r\n    if (searchStatus === VISITED)\r\n        additionalClass = 'cell--visited';\r\n    if (searchStatus === PATH)\r\n        additionalClass = 'cell--path';\r\n\r\n    return `cell ${additionalClass} ${hasTransition ? 'cell--transition' : ''}`\r\n}\r\n\r\nexport const getCellIcon = (status, searchStatus, dir) => {\r\n    if (status === START)\r\n        return <FontAwesomeIcon icon={faRunning} className=\"cell__icon--normal\"/>;\r\n    if (status === END)\r\n        return <FontAwesomeIcon icon={faFlagCheckered} className=\"cell__icon--normal\"/>;\r\n    if (searchStatus === PATH)\r\n        return <FontAwesomeIcon icon={getArrowByDir(dir)} className=\"cell__icon--extra-small\" style={{zIndex: \"100\"}}/>;\r\n    if (searchStatus === VISITING)\r\n        return <FontAwesomeIcon icon={faRunning} className=\"cell__icon--small\"/>;\r\n    return <></>;\r\n}\r\n\r\nconst getArrowByDir = (dir) => {\r\n    if (dir === LEFT)\r\n        return faArrowLeft;\r\n    if (dir === UP)\r\n        return faArrowUp;\r\n    if (dir === DOWN)\r\n        return faArrowDown;\r\n    return faArrowRight;\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useSearchVisualizer} from \"../../contexts/SearchVisualizerContext\";\r\nimport {END, NONE, START} from \"../../algorithm/nodeStatus\";\r\nimport {IDLE, SEARCHED} from \"../../algorithm/phase\";\r\nimport {getCellClassname, getCellIcon} from \"./cellHelper\";\r\nimport \"./Cell.css\"\r\n\r\n\r\nexport default function Cell({row, col}) {\r\n    const {\r\n        grid,\r\n        isApplicationInPhase,\r\n        getNode,\r\n        setStart,\r\n        setEnd,\r\n        getDraggingNode,\r\n        setDraggingNode\r\n    } = useSearchVisualizer();\r\n\r\n    const [status, setStatus] = useState(NONE);\r\n    const [searchStatus, setSearchStatus] = useState();\r\n    const [dir, setDir] = useState();\r\n    const [hasTransition, setHasTransition] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const node = getNode(row, col);\r\n        node.setStatus = s => {\r\n            getNode(row, col).status = s;\r\n            setStatus(s);\r\n            setHasTransition(true);\r\n        };\r\n        node.setSearchStatus = (s, dir, trans = true) => {\r\n            node.searchStatus = s;\r\n            node.dir = dir;\r\n            setSearchStatus(s);\r\n            setDir(dir);\r\n            setHasTransition(trans);\r\n        };\r\n\r\n        node.setStatus(getNode(row, col).status);\r\n        node.setSearchStatus(getNode(row, col).searchStatus, getNode(row, col).dir);\r\n    }, [grid, row, col]);\r\n\r\n    const canDrag = () => isApplicationInPhase(IDLE, SEARCHED);\r\n\r\n    function allowDrop(e) {\r\n        if (canDrag())\r\n            e.preventDefault();\r\n    }\r\n\r\n    function onDragEnd(e) {\r\n        e.preventDefault();\r\n        const dragNode = getDraggingNode();\r\n        getNode(row, col).setStatus(NONE);\r\n\r\n        if (status === START) {\r\n            setStart(dragNode);\r\n            dragNode.setStatus(START);\r\n        } else {//if (status === END)\r\n            setEnd(dragNode);\r\n            dragNode.setStatus(END);\r\n        }\r\n        setDraggingNode(null);\r\n    }\r\n\r\n    if ([START, END].includes(status)) {\r\n        return (\r\n            <div className={getCellClassname(status, searchStatus)}\r\n                 data-row={row}\r\n                 data-col={col}\r\n                 onDragOver={allowDrop}>\r\n                <div className={`full-width-height ${canDrag() ? 'draggable' : ''}`}\r\n                     draggable={canDrag()}\r\n                     onDragStart={() => setDraggingNode(getNode(row, col))}\r\n                     onDragEnd={onDragEnd}>\r\n                    {getCellIcon(status, searchStatus, dir)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={getCellClassname(status, searchStatus, hasTransition)}\r\n             data-row={row}\r\n             data-col={col}\r\n             data-canchangestatus={true}\r\n             onDrop={e => e.preventDefault()}\r\n             onDragOver={allowDrop}\r\n             onDragEnter={allowDrop}\r\n             onDragStart={e => e.preventDefault()}>\r\n            {getCellIcon(status, searchStatus, dir)}\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {getEventTargetData} from \"../../utils\";\r\nimport {useSearchVisualizer} from \"../../contexts/SearchVisualizerContext\";\r\nimport {IDLE, SEARCHED} from \"../../algorithm/phase\";\r\nimport {END, NONE, START, WALL} from \"../../algorithm/nodeStatus\";\r\nimport Cell from \"./Cell\";\r\nimport \"./Grid.css\";\r\n\r\n\r\nexport default function Grid() {\r\n    const {\r\n        isApplicationInPhase,\r\n        isErasingWalls,\r\n        grid,\r\n        getNode,\r\n        start,\r\n        end,\r\n        searchImmediately,\r\n        getDraggingNode,\r\n        setDraggingNode\r\n    } = useSearchVisualizer();\r\n\r\n    const [wallingMode, setWallingMode] = useState(false);\r\n\r\n    function onDragOver(e) {\r\n        const {row, col} = getEventTargetData(e);\r\n        if (!row || !col)\r\n            return;\r\n\r\n        const node = getNode(row, col);\r\n        const dragNode = getDraggingNode();\r\n        if (!node || !dragNode)\r\n            return;\r\n\r\n        if ([START, END].includes(dragNode.status)) {\r\n            const isStartDrag = dragNode.status === START;\r\n            if ([WALL, (isStartDrag ? END : START)].includes(node.status))\r\n                return;\r\n\r\n            if (dragNode !== (isStartDrag ? start : end))\r\n                dragNode.setStatus(NONE);\r\n\r\n            setDraggingNode(node);\r\n            node.setStatus(isStartDrag ? START : END);\r\n\r\n            if (isApplicationInPhase(SEARCHED)) {\r\n                if (isStartDrag) searchImmediately(node, end);\r\n                else searchImmediately(start, node);\r\n            }\r\n        }\r\n    }\r\n\r\n    function onMouseDown(e) {\r\n        const {row, col, canchangestatus} = getEventTargetData(e);\r\n        if (isApplicationInPhase(IDLE, SEARCHED) && row && col && canchangestatus) {\r\n            setWallingMode(true);\r\n            changeNodeWallStatus(getNode(row, col));\r\n        }\r\n    }\r\n\r\n    function onMouseMove(e) {\r\n        const {row, col, canchangestatus} = getEventTargetData(e);\r\n        if (wallingMode && isApplicationInPhase(IDLE, SEARCHED) && row && col && canchangestatus)\r\n            changeNodeWallStatus(getNode(row, col));\r\n    }\r\n\r\n    function onMouseUp(e) {\r\n        setWallingMode(false);\r\n    }\r\n\r\n    function changeNodeWallStatus(node) {\r\n        if (!isErasingWalls && node.status === NONE)\r\n            node.setStatus(WALL);\r\n        if (isErasingWalls && node.status === WALL)\r\n            node.setStatus(NONE);\r\n\r\n        if (isApplicationInPhase(SEARCHED))\r\n            searchImmediately(start, end);\r\n    }\r\n\r\n    return (\r\n        <div className=\"grid__wrapper\">\r\n            <div className=\"grid\"\r\n                 onMouseDown={onMouseDown}\r\n                 onMouseMove={onMouseMove}\r\n                 onMouseUp={onMouseUp}\r\n                 onDragOver={onDragOver}>\r\n                {grid.map((row, rowId) =>\r\n                    <div key={`r-${rowId}`} className=\"grid__row\">\r\n                        {row.map((col, colId) =>\r\n                            <Cell key={`n-${rowId}-${colId}`}\r\n                                  row={rowId}\r\n                                  col={colId}\r\n                                  _status={getNode(rowId, colId).status}/>\r\n                        )}\r\n                    </div>)}\r\n            </div>\r\n        </div>);\r\n}","import {useEffect} from \"react\";\r\n\r\nconst MOUSE_DOWN_EVENT_KEY = \"mousedown\";\r\n\r\nexport function useClickOutside(ref, func) {\r\n    useEffect(() => {\r\n        function onClick(e) {\r\n            if (ref.current && !ref.current.contains(e.target))\r\n                func();\r\n        }\r\n\r\n        document.addEventListener(MOUSE_DOWN_EVENT_KEY, onClick);\r\n        return () => document.removeEventListener(MOUSE_DOWN_EVENT_KEY, onClick);\r\n    }, [ref, func]);\r\n}","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {useClickOutside} from \"../../hooks/useClickOutside\";\r\nimport \"./ComboBox.css\"\r\n\r\n\r\nexport default function ComboBox({label, possibleValues, value, onValueChange, enabled = true}) {\r\n    const [opened, setOpened] = useState(false);\r\n    const [selected, setSelected] = useState(value);\r\n\r\n    const thisRef = useRef(null);\r\n    useClickOutside(thisRef, () => setOpened(false));\r\n\r\n    useEffect(() => {\r\n        setSelected(value);\r\n    }, [value]);\r\n\r\n    function onSelect(v) {\r\n        setSelected(v);\r\n        setOpened(false);\r\n        if (onValueChange)\r\n            onValueChange(v);\r\n    }\r\n\r\n    function onClick() {\r\n        if (!enabled)\r\n            return;\r\n        setOpened(!opened);\r\n    }\r\n\r\n    let val = selected ? selected.label : null;\r\n    return (\r\n        <div className=\"dropdown\" ref={thisRef}>\r\n            <div className={`dropdown__label ${enabled ? 'enabled' : 'disabled'} ${opened ? 'opened' : ''}`}\r\n                 onClick={onClick}>\r\n                {<span className=\"dropdown__label-label\">{`${label}: `}</span>}\r\n                {val && <span className=\"dropdown__label-value\">{val}</span>}\r\n            </div>\r\n            {opened\r\n            && <div className=\"dropdown__menu\">\r\n                {(!possibleValues || !possibleValues.length)\r\n                    ? <div className=\"dropdown__empty-submenu\">List is empty...</div>\r\n                    : <ul className=\"dropdown__submenu\">\r\n                        {possibleValues.map(posVal =>\r\n                            <li key={posVal.key}\r\n                                className={selected && selected.key === posVal.key ? \"selected\" : \"\"}\r\n                                onClick={() => onSelect(posVal)}>\r\n                                <span>{posVal.label}</span>\r\n                            </li>)}\r\n                    </ul>}\r\n            </div>}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport \"./Button.css\";\r\n\r\n\r\nexport default function Button({icon, label, onClick, enabled = true}) {\r\n    function onClickWrapper() {\r\n        if (enabled && onClick)\r\n            onClick();\r\n    }\r\n\r\n    return (\r\n        <button className={`button ${enabled ? 'enabled' : 'disabled'}`}\r\n                onClick={onClickWrapper}>\r\n            {icon && <FontAwesomeIcon icon={icon}/>}\r\n            {label && <span className={icon && \"extra-right-margin\"}>{label}</span>}\r\n        </button>\r\n    );\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport \"./Button.css\";\r\n\r\nexport default function ButtonToggle({icon, label, onValueChange, enabled = true, value = false}) {\r\n    const [checked, setChecked] = useState(value);\r\n\r\n    useEffect(() => {\r\n        setChecked(value);\r\n    }, [value]);\r\n\r\n    function onClick() {\r\n        if (!enabled)\r\n            return;\r\n        onValueChange(checked);\r\n        setChecked(!checked);\r\n    }\r\n\r\n    return (\r\n        <button className={`button ${enabled ? 'enabled' : 'disabled'} ${checked ? \"checked\" : \"\"}`}\r\n                onClick={onClick}>\r\n            {icon && <FontAwesomeIcon icon={icon}/>}\r\n            {label && <span className={icon && \"extra-right-margin\"}>{label}</span>}\r\n        </button>\r\n    );\r\n}","import React from \"react\";\r\nimport {\r\n    faEraser,\r\n    faPause,\r\n    faPlay,\r\n    faTrash,\r\n    faTrashAlt,\r\n    faSearch,\r\n    faStop,\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport {useSearchVisualizer} from \"../../contexts/SearchVisualizerContext\";\r\nimport {algorithmPossibleValues, speedPossibleValues} from \"../../algorithm/possibleValues\";\r\nimport {IDLE, PAUSED, SEARCHED, SEARCHING} from \"../../algorithm/phase\";\r\nimport ComboBox from \"../comboBox/ComboBox\"\r\nimport Button from \"../button/Button\";\r\nimport ButtonToggle from \"../button/ButtonToggle\";\r\nimport \"./Header.css\";\r\n\r\n\r\nconst HEADER_LABEL = \"Search Visualizer\";\r\n\r\nexport default function Header() {\r\n    const {\r\n        isApplicationInPhase,\r\n        algorithm,\r\n        setAlgorithm,\r\n        search,\r\n        stopSearch,\r\n        pauseSearch,\r\n        resumeSearch,\r\n        toggleErasingWalls,\r\n        getSpeed,\r\n        setSpeed,\r\n        clear\r\n    } = useSearchVisualizer();\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__label\">\r\n                {HEADER_LABEL}\r\n            </div>\r\n            <div className=\"header__buttons\">\r\n                <div style={{width: '5.2em'}}>\r\n                    <ComboBox label=\"algorithm\"\r\n                              possibleValues={algorithmPossibleValues}\r\n                              value={algorithm}\r\n                              onValueChange={algoType => {\r\n                                  stopSearch();\r\n                                  setAlgorithm(algoType);\r\n                              }}\r\n                              enabled={isApplicationInPhase(IDLE, SEARCHED)}/>\r\n                </div>\r\n                <div style={{width: '4.8em'}}>\r\n                    <ComboBox label=\"speed\"\r\n                              possibleValues={speedPossibleValues}\r\n                              value={getSpeed()}\r\n                              onValueChange={setSpeed}/>\r\n                </div>\r\n                <div>\r\n                    {isApplicationInPhase(IDLE, SEARCHED)\r\n                        ? <Button icon={faSearch}\r\n                                  label=\"Search\"\r\n                                  onClick={search}/>\r\n                        : <Button icon={faStop}\r\n                                  label=\"Stop\"\r\n                                  onClick={stopSearch}/>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <Button icon={isApplicationInPhase(PAUSED) ? faPlay : faPause}\r\n                            onClick={isApplicationInPhase(PAUSED) ? resumeSearch : pauseSearch}\r\n                            enabled={isApplicationInPhase(SEARCHING, PAUSED)}/>\r\n                </div>\r\n                <div>\r\n                    <ButtonToggle icon={faEraser}\r\n                                  onValueChange={toggleErasingWalls}\r\n                                  enabled={isApplicationInPhase(IDLE, SEARCHED)}/>\r\n                </div>\r\n                <div>\r\n                    <Button icon={faTrashAlt}\r\n                            label=\"Clear Path\"\r\n                            onClick={() => {\r\n                                stopSearch();\r\n                                clear(true);\r\n                            }}\r\n                            enabled={isApplicationInPhase(IDLE, SEARCHED)}/>\r\n                </div>\r\n                <div>\r\n                    <Button icon={faTrash}\r\n                            label=\"Clear\"\r\n                            onClick={() => {\r\n                                stopSearch();\r\n                                clear();\r\n                            }}\r\n                            enabled={isApplicationInPhase(IDLE, SEARCHED)}/>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n};","import React from \"react\";\r\nimport {useWindowSize} from \"../hooks/useWindowSize\";\r\nimport Grid from \"./grid/Grid\";\r\nimport Header from \"./header/Header\";\r\nimport SearchVisualizerProvider from \"../contexts/SearchVisualizerContext\";\r\n\r\nexport default function SearchVisualizer() {\r\n    // TODO [NODO] for smaller screens better sizing!!!\r\n    const [width, height] = useWindowSize();\r\n    console.log(\"width = \" + width);\r\n\r\n    const emInPixels = parseFloat(getComputedStyle(document.body).fontSize);\r\n    console.log(\"parseFloat(getComputedStyle(parentElement).fontSize); = \" + emInPixels);\r\n    const cellSize = Math.floor( 1.2 * emInPixels);\r\n    const headerSize = emInPixels * 3;\r\n\r\n    let rowNum = (height - headerSize) * 0.96 < cellSize ? 0 : Math.floor((height - headerSize) * 0.96 / cellSize);\r\n    let colNum = width * 0.96 < cellSize ? 0 : Math.floor(width * 0.96 / cellSize);\r\n\r\n    console.log(\"rowNum\" + rowNum);\r\n    console.log(\"colNUm\" + colNum);\r\n\r\n    return (\r\n        <SearchVisualizerProvider rowNum={rowNum}\r\n                                  colNum={colNum}>\r\n            <Header/>\r\n            <Grid/>\r\n        </SearchVisualizerProvider>\r\n    );\r\n}","import SearchVisualizer from \"./components/SearchVisualizer\";\nimport './App.css';\n\nfunction App() {\n  return (\n      <SearchVisualizer/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n//reportWebVitals(console.log);\n"],"sourceRoot":""}